[gd_scene load_steps=47 format=2]

[ext_resource path="res://scenes/objects/ships/SwedishRoyalYachtAmadis/SwedishRoyalYachtAmadis.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/games/TestWater01/TestWater01.gd" type="Script" id=2]

[sub_resource type="OpenSimplexNoise" id=1]
octaves = 4

[sub_resource type="NoiseTexture" id=2]
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
source = 5
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "albedo"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 0.99

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 0.05

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.1

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "normal_map"
texture_type = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "speed"

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeVec3Uniform" id=13]
uniform_name = "direction"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=24]
constant = 0.01

[sub_resource type="VisualShaderNodeVectorOp" id=25]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=26]

[sub_resource type="VisualShaderNodeVectorFunc" id=27]

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "height_scale"

[sub_resource type="VisualShaderNodeScalarConstant" id=29]
constant = 0.1

[sub_resource type="VisualShaderNodeScalarOp" id=30]
operator = 2

[sub_resource type="OpenSimplexNoise" id=31]

[sub_resource type="NoiseTexture" id=32]
seamless = true
noise = SubResource( 31 )

[sub_resource type="VisualShaderNodeTexture" id=33]
texture = SubResource( 32 )

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=35]

[sub_resource type="VisualShaderNodeVectorOp" id=36]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 10 ) ]
operator = 3

[sub_resource type="VisualShaderNodeVectorFunc" id=37]
function = 14

[sub_resource type="VisualShaderNodeVectorOp" id=38]

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "time"

[sub_resource type="VisualShader" id=40]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_vtx_3;
uniform float height_scale;
uniform vec4 albedo : hint_color;
uniform float speed;
uniform vec3 direction;
uniform sampler2D normal_map : hint_normal;



void vertex() {
// Input:10
	vec3 n_out10p0 = VERTEX;

// VectorDecompose:11
	float n_out11p0 = n_out10p0.x;
	float n_out11p1 = n_out10p0.y;
	float n_out11p2 = n_out10p0.z;

// Input:4
	vec3 n_out4p0 = VERTEX;

// VectorDecompose:13
	float n_out13p0 = n_out4p0.x;
	float n_out13p1 = n_out4p0.y;
	float n_out13p2 = n_out4p0.z;

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_out13p0, n_out13p2, n_in14p2);

// VectorOp:6
	vec3 n_in6p1 = vec3(10.00000, 10.00000, 10.00000);
	vec3 n_out6p0 = n_out14p0 / n_in6p1;

// Scalar:16
	float n_out16p0 = 0.010000;

// Input:9
	float n_out9p0 = TIME;

// VectorOp:8
	vec3 n_out8p0 = vec3(n_out9p0) + n_out14p0;

// VectorFunc:7
	vec3 n_out7p0 = cos(n_out8p0);

// VectorOp:15
	vec3 n_out15p0 = vec3(n_out16p0) * n_out7p0;

// VectorOp:17
	vec3 n_out17p0 = n_out6p0 - n_out15p0;

// Texture:3
	vec4 tex_vtx_3_read = texture(tex_vtx_3, n_out17p0.xy);
	vec3 n_out3p0 = tex_vtx_3_read.rgb;
	float n_out3p1 = tex_vtx_3_read.a;

// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;

// ScalarUniform:2
	float n_out2p0 = height_scale;

// ScalarOp:21
	float n_out21p0 = n_out5p0 * n_out2p0;

// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out11p0, n_out21p0, n_out11p2);

// Output:0
	VERTEX = n_out12p0;

}

void fragment() {
// ColorUniform:11
	vec3 n_out11p0 = albedo.rgb;
	float n_out11p1 = albedo.a;

// Input:17
	vec3 n_out17p0 = vec3(UV, 0.0);

// ScalarUniform:2
	float n_out2p0 = speed;

// Input:3
	float n_out3p0 = TIME;

// VectorOp:5
	vec3 n_out5p0 = vec3(n_out2p0) * vec3(n_out3p0);

// VectorUniform:4
	vec3 n_out4p0 = direction;

// VectorFunc:7
	vec3 n_out7p0 = normalize(n_out4p0);

// VectorOp:6
	vec3 n_out6p0 = n_out5p0 * n_out7p0;

// VectorOp:8
	vec3 n_out8p0 = n_out17p0 + n_out6p0;

// Texture:10
	vec3 n_out10p0;
	float n_out10p1;
	{
		vec4 normal_map_tex_read = texture(normal_map, n_out8p0.xy);
		n_out10p0 = normal_map_tex_read.rgb;
		n_out10p1 = normal_map_tex_read.a;
	}

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 * n_out10p0;

// Scalar:13
	float n_out13p0 = 0.990000;

// Scalar:14
	float n_out14p0 = 0.050000;

// Scalar:15
	float n_out15p0 = 0.100000;

// Output:0
	ALBEDO = n_out12p0;
	ALPHA = n_out13p0;
	ROUGHNESS = n_out14p0;
	SPECULAR = n_out15p0;
	NORMALMAP = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 84.6331, 194.8 )
nodes/vertex/0/position = Vector2( 920, 160 )
nodes/vertex/2/node = SubResource( 28 )
nodes/vertex/2/position = Vector2( 240, 400 )
nodes/vertex/3/node = SubResource( 33 )
nodes/vertex/3/position = Vector2( 0, 200 )
nodes/vertex/4/node = SubResource( 34 )
nodes/vertex/4/position = Vector2( -1000, 340 )
nodes/vertex/5/node = SubResource( 35 )
nodes/vertex/5/position = Vector2( 220, 300 )
nodes/vertex/6/node = SubResource( 36 )
nodes/vertex/6/position = Vector2( -420, 300 )
nodes/vertex/7/node = SubResource( 37 )
nodes/vertex/7/position = Vector2( -440, 180 )
nodes/vertex/8/node = SubResource( 38 )
nodes/vertex/8/position = Vector2( -620, 220 )
nodes/vertex/9/node = SubResource( 39 )
nodes/vertex/9/position = Vector2( -860, 220 )
nodes/vertex/10/node = SubResource( 18 )
nodes/vertex/10/position = Vector2( 60, 100 )
nodes/vertex/11/node = SubResource( 19 )
nodes/vertex/11/position = Vector2( 220, 180 )
nodes/vertex/12/node = SubResource( 20 )
nodes/vertex/12/position = Vector2( 700, 200 )
nodes/vertex/13/node = SubResource( 21 )
nodes/vertex/13/position = Vector2( -820, 340 )
nodes/vertex/14/node = SubResource( 22 )
nodes/vertex/14/position = Vector2( -620, 340 )
nodes/vertex/15/node = SubResource( 23 )
nodes/vertex/15/position = Vector2( -260, 100 )
nodes/vertex/16/node = SubResource( 24 )
nodes/vertex/16/position = Vector2( -440, 80 )
nodes/vertex/17/node = SubResource( 25 )
nodes/vertex/17/position = Vector2( -180, 240 )
nodes/vertex/18/node = SubResource( 26 )
nodes/vertex/18/position = Vector2( 340, 480 )
nodes/vertex/19/node = SubResource( 27 )
nodes/vertex/19/position = Vector2( 540, 480 )
nodes/vertex/20/node = SubResource( 29 )
nodes/vertex/20/position = Vector2( -120, 520 )
nodes/vertex/21/node = SubResource( 30 )
nodes/vertex/21/position = Vector2( 460, 280 )
nodes/vertex/connections = PoolIntArray( 3, 0, 5, 0, 8, 0, 7, 0, 9, 0, 8, 0, 10, 0, 11, 0, 11, 0, 12, 0, 11, 2, 12, 2, 12, 0, 0, 0, 4, 0, 13, 0, 13, 0, 14, 0, 13, 2, 14, 1, 14, 0, 6, 0, 14, 0, 8, 1, 16, 0, 15, 0, 7, 0, 15, 1, 6, 0, 17, 0, 15, 0, 17, 1, 17, 0, 3, 0, 18, 0, 19, 0, 20, 0, 18, 1, 5, 0, 21, 0, 2, 0, 21, 1, 21, 0, 12, 1 )
nodes/fragment/0/position = Vector2( 1080, 100 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -340, 180 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -340, 240 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -360, 320 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( -80, 180 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( 120, 220 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( -160, 320 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( 300, 220 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 520, 240 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 540, -20 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 740, 20 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 780, 140 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( 780, 200 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 780, 260 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( 160, 380 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( 120, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 3, 0, 5, 1, 4, 0, 7, 0, 7, 0, 6, 1, 5, 0, 6, 0, 8, 0, 10, 0, 10, 0, 0, 8, 11, 0, 12, 0, 10, 0, 12, 1, 12, 0, 0, 0, 13, 0, 0, 1, 14, 0, 0, 3, 15, 0, 0, 4, 6, 0, 8, 1, 17, 0, 8, 0, 16, 2, 10, 2 )

[sub_resource type="OpenSimplexNoise" id=41]

[sub_resource type="NoiseTexture" id=42]
seamless = true
as_normalmap = true
noise = SubResource( 41 )

[sub_resource type="ShaderMaterial" id=43]
shader = SubResource( 40 )
shader_param/height_scale = 2.0
shader_param/albedo = Color( 0.105882, 0.219608, 0.392157, 1 )
shader_param/speed = 0.025
shader_param/direction = Vector3( 1, 0, 0 )
shader_param/normal_map = SubResource( 42 )

[sub_resource type="PlaneMesh" id=44]
material = SubResource( 43 )
size = Vector2( 50, 50 )
subdivide_width = 32
subdivide_depth = 32

[node name="TestWater01" type="Spatial"]
script = ExtResource( 2 )

[node name="Water" type="Spatial" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="Water"]
mesh = SubResource( 44 )
material/0 = null

[node name="TestBoat" parent="." instance=ExtResource( 1 )]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.946953, 0.120519, -0.29792, 0, 0.92702, 0.375011, 0.321373, -0.355118, 0.877844, -4.81386, 6.18042, 7.4 )
