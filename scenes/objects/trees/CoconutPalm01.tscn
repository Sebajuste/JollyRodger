[gd_scene load_steps=14 format=2]

[ext_resource path="res://assets/3d/tree/CoconutPalm/trunk_lod1.material" type="Material" id=1]
[ext_resource path="res://assets/3d/tree/CoconutPalm/leaf_lod1.material" type="Material" id=2]
[ext_resource path="res://addons/lod/lod_spatial.gd" type="Script" id=3]
[ext_resource path="res://assets/3d/tree/CoconutPalm/CoconutPalm_lod0.obj" type="ArrayMesh" id=4]
[ext_resource path="res://assets/3d/tree/CoconutPalm/leaf_lod2.material" type="Material" id=5]
[ext_resource path="res://assets/3d/tree/CoconutPalm/CoconutPalm_lod1.obj" type="ArrayMesh" id=6]
[ext_resource path="res://assets/3d/tree/CoconutPalm/coconut palm leaf_n.png" type="Texture" id=7]
[ext_resource path="res://assets/3d/tree/CoconutPalm/coconut palm leaf.png" type="Texture" id=8]
[ext_resource path="res://assets/3d/tree/CoconutPalm/coconut palm leaf_s.png" type="Texture" id=9]
[ext_resource path="res://scenes/objects/trees/CoconutPalm01.gd" type="Script" id=10]

[sub_resource type="CylinderShape" id=1]
radius = 0.311499
height = 3.46907

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float distance_fade_min;
uniform float distance_fade_max;
uniform float alpha_scissor_threshold;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float sway_speed = 1.0;
uniform float sway_strength = 0.05;
uniform float sway_phase_len = 8.0;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	float strength = COLOR.r * sway_strength;
	VERTEX.x += sin(VERTEX.x * sway_phase_len * 1.123 + TIME * sway_speed) * strength;
	VERTEX.y += sin(VERTEX.y * sway_phase_len + TIME * sway_speed * 1.12412) * strength;
	VERTEX.z += sin(VERTEX.z * sway_phase_len * 0.9123 + TIME * sway_speed * 1.3123) * strength;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,base_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
	ALPHA = albedo.a * albedo_tex.a;
	{
		float fade_distance = abs((INV_CAMERA_MATRIX * WORLD_MATRIX[3]).z);
		float fade=clamp(smoothstep(distance_fade_min,distance_fade_max,fade_distance),0.0,1.0);
		int x = int(FRAGCOORD.x) % 4;
		int y = int(FRAGCOORD.y) % 4;
		int index = x + y * 4;
		float limit = 0.0;

		if (x < 8) {
			if (index == 0) limit = 0.0625;
			if (index == 1) limit = 0.5625;
			if (index == 2) limit = 0.1875;
			if (index == 3) limit = 0.6875;
			if (index == 4) limit = 0.8125;
			if (index == 5) limit = 0.3125;
			if (index == 6) limit = 0.9375;
			if (index == 7) limit = 0.4375;
			if (index == 8) limit = 0.25;
			if (index == 9) limit = 0.75;
			if (index == 10) limit = 0.125;
			if (index == 11) limit = 0.625;
			if (index == 12) limit = 1.0;
			if (index == 13) limit = 0.5;
			if (index == 14) limit = 0.875;
			if (index == 15) limit = 0.375;
		}

	if (fade < limit)
		discard;
	}

	ALPHA_SCISSOR=alpha_scissor_threshold;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.47
shader_param/metallic = 0.46
shader_param/distance_fade_min = 0.0
shader_param/distance_fade_max = 0.0
shader_param/alpha_scissor_threshold = 0.3
shader_param/roughness = 0.94
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/sway_speed = 3.0
shader_param/sway_strength = 0.05
shader_param/sway_phase_len = 2.0
shader_param/texture_albedo = ExtResource( 8 )
shader_param/texture_metallic = ExtResource( 9 )
shader_param/texture_normal = ExtResource( 7 )

[node name="CoconutPalm01" type="StaticBody"]
script = ExtResource( 10 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 0.895779, 0.164406, 0.412977, -0.180519, 0.983571, 0, -0.406193, -0.0745503, 0.910741, 0.340006, 2.14273, -0.11745 )
shape = SubResource( 1 )

[node name="CollisionShape2" type="CollisionShape" parent="."]
transform = Transform( 0.80309, 0.429531, 0.412977, -0.471628, 0.881798, 3.16595e-08, -0.364162, -0.194771, 0.910741, 1.36904, 5.36454, -0.584068 )
shape = SubResource( 1 )

[node name="CollisionShape3" type="CollisionShape" parent="."]
transform = Transform( 0.949164, 0.0797923, 0.304501, -0.122575, 0.984676, 0.124054, -0.289936, -0.155072, 0.944399, 2.26891, 8.56659, -1.19526 )
shape = SubResource( 1 )

[node name="Skin" type="Spatial" parent="."]
script = ExtResource( 3 )
lod_0_max_distance = 200.0
lod_1_max_distance = 500.0
lod_2_max_distance = 1000.0

[node name="MeshInstance-lod0" type="MeshInstance" parent="Skin"]
mesh = ExtResource( 4 )
material/0 = ExtResource( 1 )
material/1 = SubResource( 3 )

[node name="MeshInstance-lod1" type="MeshInstance" parent="Skin"]
visible = false
mesh = ExtResource( 6 )
material/0 = ExtResource( 1 )
material/1 = ExtResource( 2 )

[node name="MeshInstance-lod2" type="MeshInstance" parent="Skin"]
visible = false
cast_shadow = 0
lod_min_distance = 510.0
mesh = ExtResource( 6 )
material/0 = ExtResource( 1 )
material/1 = ExtResource( 5 )

[node name="MeshInstance-shadow-lod2" type="MeshInstance" parent="Skin"]
visible = false
cast_shadow = 3
lod_min_distance = 510.0
mesh = ExtResource( 6 )
material/0 = ExtResource( 1 )
material/1 = ExtResource( 5 )

[node name="MeshInstance-lod3" type="MeshInstance" parent="Skin"]
visible = false
cast_shadow = 0
lod_min_distance = 510.0
mesh = ExtResource( 6 )
material/0 = ExtResource( 1 )
material/1 = ExtResource( 5 )
